window.dom = {
  // 创建节点
  create(string) {
    const template = document.createElement("template");
    template.innerHTML = string.trim();
    return template.content.firstChild;
  },
  // 新增弟弟
  after(node, node2) {
    node.parentNode.insertBefore(node2, node.nextSibling);
  },
  // 新增哥哥
  before(node, node2) {
    node.parentNode.insertBefore(node2, node);
  },
  // 新增儿子
  append(parent, node) {
    parent.appendChild(node);
  },
  // 新增爸爸
  wrap(node, parent) {
    dom.before(node, parent);
    dom.append(parent, node);
  },
  // 删除节点
  remove(node) {
    // node.remove(); 比较新，可能会不支持
    node.parentNode.removeChild(node);
    return node;
  },
  // 删除后代
  empty(node) {
    // node.innerHTML = '';
    const { childNodes } = node; // const childNodes = node.childNodes
    const array = [];
    let x = node.firstChild;
    while (x) {
      array.push(dom.remove(x));
      x = node.firstChild;
    }
    return array;
  },
  // 读写属性
  attr(node, name, value) {
    // 重载
    if (arguments.length === 3) {
      node.setAttribute(name, value);
    } else if (arguments.length === 2) {
      return node.getAttribute(name);
    }
  },
  // 读写文本内容
  text(node, string) {
    if (arguments.length === 2) {
      // 适配
      if ("innerText" in node) {
        node.innerText = string; // IE
      } else {
        node.textContent = string; // Firefox Chrome
      }
    } else if (arguments.length === 1) {
      if ("innerText" in node) {
        return node.innerText;
      } else {
        return node.textContent; // Firefox Chrome
      }
    }
  },
  // 读写HTML
  html(node, string) {
    if (arguments.length === 2) {
      node.innerHTML = string;
    } else if (arguments.length === 1) {
      return node.innerHTML;
    }
  },
  style(node,)
};
